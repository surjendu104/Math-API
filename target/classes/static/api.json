{
  "openapi": "3.0.1",
  "info": {
    "title": "OpenAPI definition",
    "version": "v0"
  },
  "servers": [
    {
      "url": "https://numerical-methods-solver.onrender.com",
      "description": "Generated server url"
    }
  ],
  "paths": {
    "/api/v1/solutionOfODE/eulersModifiedMethod": {
      "post": {
        "tags": [
          "solution-of-ode-controller"
        ],
        "operationId": "eulersModifiedMethodController",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODE"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ODEDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/solutionOfODE/eulersMethod": {
      "post": {
        "tags": [
          "solution-of-ode-controller"
        ],
        "operationId": "eulersMethodController",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ODE"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ODEDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/numericalIntegration/trapezoidalRule": {
      "post": {
        "tags": [
          "numerical-integration-controller"
        ],
        "operationId": "trapezoidalRuleController",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Integration"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/numericalIntegration/simpsonsThreeByEightRule": {
      "post": {
        "tags": [
          "numerical-integration-controller"
        ],
        "operationId": "simpsonsThreeByEightRuleController",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Integration"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/numericalIntegration/simpsonsOneThirdRule": {
      "post": {
        "tags": [
          "numerical-integration-controller"
        ],
        "operationId": "simpsonsOneThirdRuleController",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Integration"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/numericalIntegration/boolesRule": {
      "post": {
        "tags": [
          "numerical-integration-controller"
        ],
        "operationId": "boolesRuleController",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Integration"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/linearAlgebraicEquations/lUDecomposition": {
      "post": {
        "tags": [
          "linear-algebraic-equations-controller"
        ],
        "operationId": "lUDecompositionMethodController",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LinearAlgebraicEquations"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/LinearAlgebraicEquationsDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/linearAlgebraicEquations/gaussSeidal": {
      "post": {
        "tags": [
          "linear-algebraic-equations-controller"
        ],
        "operationId": "gaussSeidalMethodController",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LinearAlgebraicEquations"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/LinearAlgebraicEquationsDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/linearAlgebraicEquations/gaussJordan": {
      "post": {
        "tags": [
          "linear-algebraic-equations-controller"
        ],
        "operationId": "gaussJordanMethodController",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LinearAlgebraicEquations"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/LinearAlgebraicEquationsDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/linearAlgebraicEquations/gaussElimination": {
      "post": {
        "tags": [
          "linear-algebraic-equations-controller"
        ],
        "operationId": "gaussEliminationMethodController",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LinearAlgebraicEquations"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/LinearAlgebraicEquationsDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/interpolation/stirlingInterpolation": {
      "post": {
        "tags": [
          "interpolation-controller"
        ],
        "operationId": "stirlingInterpolation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Interpolation"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/InterpolationDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/interpolation/newtonsDividedDifference": {
      "post": {
        "tags": [
          "interpolation-controller"
        ],
        "operationId": "newtonsDividedDifference",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Interpolation"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/InterpolationDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/interpolation/newtonForwardInterpolation": {
      "post": {
        "tags": [
          "interpolation-controller"
        ],
        "operationId": "newtonFrowardInterpolation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Interpolation"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/InterpolationDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/interpolation/newtonBackwardInterpolation": {
      "post": {
        "tags": [
          "interpolation-controller"
        ],
        "operationId": "newtonBackwardInterpolation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Interpolation"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/InterpolationDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/interpolation/lagrangesInterpolation": {
      "post": {
        "tags": [
          "interpolation-controller"
        ],
        "operationId": "lagrangesInterpolation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Interpolation"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/InterpolationDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/interpolation/gaussForwardInterpolation": {
      "post": {
        "tags": [
          "interpolation-controller"
        ],
        "operationId": "gaussForwardInterpolation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Interpolation"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/InterpolationDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/interpolation/gaussBackwardInterpolation": {
      "post": {
        "tags": [
          "interpolation-controller"
        ],
        "operationId": "gaussBackwardInterpolation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Interpolation"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/InterpolationDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/algebraicAndTranscendentalEquation/regulaFalsiMethod": {
      "post": {
        "tags": [
          "algebraic-and-transcendental-equation-controller"
        ],
        "operationId": "findRootByRegulaFalsiMethod",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AlgebraicAndTranscendentalEqations"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AlgebraicFunctionsDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/algebraicAndTranscendentalEquation/newtonRaphsonMethod": {
      "post": {
        "tags": [
          "algebraic-and-transcendental-equation-controller"
        ],
        "operationId": "findRootByNewtonRaphsonMethod",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AlgebraicAndTranscendentalEqations"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AlgebraicFunctionsDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/algebraicAndTranscendentalEquation/bisectionMethod": {
      "post": {
        "tags": [
          "algebraic-and-transcendental-equation-controller"
        ],
        "operationId": "findRootByBisectionMethod",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AlgebraicAndTranscendentalEqations"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AlgebraicFunctionsDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/math/": {
      "get": {
        "tags": [
          "math-controller"
        ],
        "operationId": "function",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ODE": {
        "type": "object",
        "properties": {
          "equation": {
            "type": "string"
          },
          "height": {
            "type": "number",
            "format": "double"
          },
          "partitions": {
            "type": "integer",
            "format": "int32"
          },
          "valueOfX": {
            "type": "number",
            "format": "double"
          },
          "valueOfY": {
            "type": "number",
            "format": "double"
          },
          "valuePoint": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "ODEDto": {
        "type": "object",
        "properties": {
          "equation": {
            "type": "string"
          },
          "height": {
            "type": "number",
            "format": "double"
          },
          "partitions": {
            "type": "integer",
            "format": "int32"
          },
          "valueOfX": {
            "type": "number",
            "format": "double"
          },
          "valueOfY": {
            "type": "number",
            "format": "double"
          },
          "valuePoint": {
            "type": "number",
            "format": "double"
          },
          "result": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "number",
                "format": "double"
              }
            }
          },
          "resultAtPoint": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "Integration": {
        "type": "object",
        "properties": {
          "expression": {
            "type": "string"
          },
          "lowerBound": {
            "type": "number",
            "format": "double"
          },
          "upperBound": {
            "type": "number",
            "format": "double"
          },
          "partitionNumber": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "IntegrationDto": {
        "type": "object",
        "properties": {
          "expression": {
            "type": "string"
          },
          "lowerBound": {
            "type": "number",
            "format": "double"
          },
          "upperBound": {
            "type": "number",
            "format": "double"
          },
          "partitionNumber": {
            "type": "number",
            "format": "double"
          },
          "result": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "LinearAlgebraicEquations": {
        "type": "object",
        "properties": {
          "inputMatrix": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "number",
                "format": "double"
              }
            }
          },
          "allowedError": {
            "type": "number",
            "format": "double"
          },
          "maximumIteration": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "LinearAlgebraicEquationsDto": {
        "type": "object",
        "properties": {
          "inputMatrix": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "number",
                "format": "double"
              }
            }
          },
          "solutions": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            }
          },
          "allowedError": {
            "type": "number",
            "format": "double"
          },
          "maximumIteration": {
            "type": "integer",
            "format": "int32"
          },
          "convergeIteration": {
            "type": "string"
          }
        }
      },
      "Interpolation": {
        "type": "object",
        "properties": {
          "points": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            }
          },
          "values": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            }
          },
          "valuePoint": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "InterpolationDto": {
        "type": "object",
        "properties": {
          "points": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            }
          },
          "values": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            }
          },
          "valuePoint": {
            "type": "number",
            "format": "double"
          },
          "table": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "number",
                "format": "double"
              }
            }
          },
          "interpolationResult": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "AlgebraicAndTranscendentalEqations": {
        "type": "object",
        "properties": {
          "equation": {
            "type": "string"
          },
          "lowerLimit": {
            "type": "number",
            "format": "double"
          },
          "upperLimit": {
            "type": "number",
            "format": "double"
          },
          "numberOfIteration": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "AlgebraicFunctionsDto": {
        "type": "object",
        "properties": {
          "equation": {
            "type": "string"
          },
          "lowerLimit": {
            "type": "number",
            "format": "double"
          },
          "upperLimit": {
            "type": "number",
            "format": "double"
          },
          "numberOfIteration": {
            "type": "integer",
            "format": "int32"
          },
          "functionValue": {
            "type": "number",
            "format": "double"
          },
          "calculatedRoot": {
            "type": "number",
            "format": "double"
          }
        }
      }
    }
  }
}